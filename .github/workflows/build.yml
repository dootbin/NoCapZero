name: Build Orange Pi Zero 2W Images

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      build_variant:
        description: 'Build variant to create'
        required: true
        default: 'runtime'
        type: choice
        options:
        - runtime
        - development
        - debug
        - all

env:
  DEBIAN_FRONTEND: noninteractive
  # Pre-built component URLs from our components workflow
  COMPONENTS_RELEASE: components-latest
  MALI_DRIVER_URL: https://github.com/JeffyCN/mirrors/raw/libmali/lib/aarch64-linux-gnu/libmali-bifrost-g31-rxp0-wayland-gbm.so

jobs:
  setup:
    runs-on: ubuntu-22.04
    outputs:
      matrix: ${{ steps.build-matrix.outputs.matrix }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Generate build matrix
        id: build-matrix
        run: |
          if [ "${{ github.event.inputs.build_variant }}" = "all" ] || [ -z "${{ github.event.inputs.build_variant }}" ]; then
            MATRIX='["runtime", "development", "debug"]'
          else
            MATRIX='["${{ github.event.inputs.build_variant }}"]'
          fi
          echo "matrix=${MATRIX}" >> $GITHUB_OUTPUT

  build:
    needs: setup
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        variant: ${{ fromJson(needs.setup.outputs.matrix) }}
      fail-fast: false
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install required packages
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            wget \
            curl \
            xz-utils \
            qemu-user-static \
            binfmt-support \
            debootstrap \
            parted \
            dosfstools \
            e2fsprogs \
            pixz \
            rsync \
            device-tree-compiler

      - name: Download pre-built U-Boot
        run: |
          mkdir -p /tmp/downloads
          wget -O /tmp/downloads/u-boot-sunxi-with-spl.bin \
            https://github.com/${{ github.repository }}/releases/download/${{ env.COMPONENTS_RELEASE }}/u-boot-sunxi-with-spl.bin

      - name: Download pre-built kernel and modules
        run: |
          # Download pre-built kernel image
          wget -O /tmp/downloads/Image \
            https://github.com/${{ github.repository }}/releases/download/${{ env.COMPONENTS_RELEASE }}/Image
          
          # Download pre-built DTB
          wget -O /tmp/downloads/sun50i-h618-orangepi-zero2w.dtb \
            https://github.com/${{ github.repository }}/releases/download/${{ env.COMPONENTS_RELEASE }}/sun50i-h618-orangepi-zero2w.dtb
          
          # Download kernel modules tarball
          wget -O /tmp/downloads/modules.tar.gz \
            https://github.com/${{ github.repository }}/releases/download/${{ env.COMPONENTS_RELEASE }}/modules.tar.gz
          
          # Extract modules
          mkdir -p /tmp
          tar -xzf /tmp/downloads/modules.tar.gz -C /tmp/

      - name: Download Mali GPU driver
        run: |
          wget -O /tmp/downloads/libmali.so "$MALI_DRIVER_URL"

      - name: Download Arch Linux ARM base
        run: |
          wget -O /tmp/downloads/ArchLinuxARM-aarch64-latest.tar.gz \
            http://os.archlinuxarm.org/os/ArchLinuxARM-aarch64-latest.tar.gz

      - name: Create root filesystem
        run: |
          ./scripts/create-rootfs.sh \
            --variant ${{ matrix.variant }} \
            --arch-tarball /tmp/downloads/ArchLinuxARM-aarch64-latest.tar.gz \
            --kernel-modules /tmp/modules \
            --mali-driver /tmp/downloads/libmali.so \
            --output /tmp/rootfs-${{ matrix.variant }}

      - name: Build SD card image
        run: |
          ./scripts/create-image.sh \
            --rootfs /tmp/rootfs-${{ matrix.variant }} \
            --uboot /tmp/downloads/u-boot-sunxi-with-spl.bin \
            --kernel /tmp/downloads/Image \
            --dtb /tmp/downloads/sun50i-h618-orangepi-zero2w.dtb \
            --variant ${{ matrix.variant }} \
            --output orangepi-zero2w-${{ matrix.variant }}.img

      - name: Compress image
        run: |
          pixz -9 orangepi-zero2w-${{ matrix.variant }}.img
          sha256sum orangepi-zero2w-${{ matrix.variant }}.img.xz > orangepi-zero2w-${{ matrix.variant }}.img.xz.sha256

      - name: Generate build info
        run: |
          cat > orangepi-zero2w-${{ matrix.variant }}.info << EOF
          Build Date: $(date -u +"%Y-%m-%d %H:%M:%S UTC")
          Variant: ${{ matrix.variant }}
          Git Commit: ${{ github.sha }}
          Git Ref: ${{ github.ref }}
          Pre-built Components: U-Boot, Kernel, DTB
          Image Size: $(stat -c%s orangepi-zero2w-${{ matrix.variant }}.img.xz) bytes
          EOF

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: orangepi-zero2w-${{ matrix.variant }}
          path: |
            orangepi-zero2w-${{ matrix.variant }}.img.xz
            orangepi-zero2w-${{ matrix.variant }}.img.xz.sha256
            orangepi-zero2w-${{ matrix.variant }}.info
          retention-days: 30

      - name: Upload to release (if tag)
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: |
            orangepi-zero2w-${{ matrix.variant }}.img.xz
            orangepi-zero2w-${{ matrix.variant }}.img.xz.sha256
            orangepi-zero2w-${{ matrix.variant }}.info
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  validate:
    needs: build
    runs-on: ubuntu-22.04
    if: github.event_name == 'pull_request'
    strategy:
      matrix:
        variant: ["runtime", "development", "debug"]
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: orangepi-zero2w-${{ matrix.variant }}

      - name: Validate image structure
        run: |
          xz -d orangepi-zero2w-${{ matrix.variant }}.img.xz
          ./scripts/validate-image.sh orangepi-zero2w-${{ matrix.variant }}.img