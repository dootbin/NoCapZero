name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      tag:
        description: 'Release tag'
        required: true
        type: string

jobs:
  build-release:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get tag name
        id: get_tag
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "tag=${{ github.event.inputs.tag }}" >> $GITHUB_OUTPUT
          else
            echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          fi

      - name: Trigger build for all variants
        uses: actions/github-script@v7
        with:
          script: |
            const tag = '${{ steps.get_tag.outputs.tag }}';
            
            // Trigger build workflow
            const workflow = await github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'build.yml',
              ref: tag,
              inputs: {
                build_variant: 'all'
              }
            });
            
            console.log('Build workflow triggered for tag:', tag);

      - name: Generate release notes
        id: release_notes
        run: |
          # Get previous tag
          PREV_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
          TAG="${{ steps.get_tag.outputs.tag }}"
          
          # Generate changelog
          {
            echo "# Orange Pi Zero 2W Release $TAG"
            echo ""
            echo "## ðŸš€ Features"
            echo ""
            echo "- Pre-built images for Orange Pi Zero 2W"
            echo "- Hardware-accelerated graphics (Mali-G31 GPU)"
            echo "- USB gadget support (mass storage, networking, serial)"
            echo "- Minimal footprint (~200MB runtime edition)"
            echo ""
            
            if [ -n "$PREV_TAG" ]; then
              echo "## ðŸ“‹ Changes since $PREV_TAG"
              echo ""
              git log --pretty=format:"- %s (%h)" $PREV_TAG..HEAD
              echo ""
            fi
            
            echo ""
            echo "## ðŸ“¦ Available Variants"
            echo ""
            echo "- **Runtime Edition**: Minimal system for production (~200MB)"
            echo "- **Development Edition**: Includes development tools (~600MB)"
            echo "- **Debug Edition**: Development + debug symbols (~800MB)"
            echo ""
            echo "## ðŸ”§ Build Information"
            echo ""
            echo "- Build Date: $(date -u +"%Y-%m-%d %H:%M:%S UTC")"
            echo "- Components: Prebuilt from components-latest"
            echo "- Base OS: Arch Linux ARM"
            echo "- Kernel: Orange Pi 6.1-sun50iw9"
            echo "- U-Boot: v2025.01"
            echo ""
            echo "## ðŸ“¥ Installation"
            echo ""
            echo '```bash'
            echo "# Download and extract"
            echo "wget https://github.com/${{ github.repository }}/releases/download/$TAG/orangepi-zero2w-runtime.img.xz"
            echo "xz -d orangepi-zero2w-runtime.img.xz"
            echo ""
            echo "# Flash to SD card"
            echo "sudo dd if=orangepi-zero2w-runtime.img of=/dev/sdX bs=4M status=progress"
            echo "sync"
            echo '```'
            echo ""
            echo "Default credentials: root / orangepi"
          } > release_notes.md

      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.get_tag.outputs.tag }}
          name: Orange Pi Zero 2W ${{ steps.get_tag.outputs.tag }}
          body_path: release_notes.md
          draft: true
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Note about release process
        run: |
          echo "Release created as draft. The build workflow will upload artifacts."
          echo "Once artifacts are uploaded, manually publish the release."
          echo ""
          echo "This new process uses prebuilt components for faster, more reliable releases."